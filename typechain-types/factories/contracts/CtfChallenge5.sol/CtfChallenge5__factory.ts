/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CtfChallenge5,
  CtfChallenge5Interface,
} from "../../../contracts/CtfChallenge5.sol/CtfChallenge5";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_challengeAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "fallbackCalled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "recieveCalled",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "TARGET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "challenge",
    outputs: [
      {
        internalType: "contract IChallenge5",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104df3803806104df833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b6103c8806101176000396000f3fe6080604052600436106100435760003560e01c80634b28f9a2146100fc578063cc1f2afa14610127578063d2ef739814610152578063ecbfc0771461017d576100ee565b366100ee57600b60015410156100ec576001600081548092919061006690610286565b919050555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166304d092c76040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100d357600080fd5b505af11580156100e7573d6000803e3d6000fd5b505050505b005b3480156100fa57600080fd5b005b34801561010857600080fd5b50610111610194565b60405161011e91906102dd565b60405180910390f35b34801561013357600080fd5b5061013c61019a565b60405161014991906102dd565b60405180910390f35b34801561015e57600080fd5b5061016761019f565b6040516101749190610377565b60405180910390f35b34801561018957600080fd5b506101926101c3565b005b60015481565b600b81565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060018190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166304d092c76040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561023357600080fd5b505af1158015610247573d6000803e3d6000fd5b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006102918261027c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036102c3576102c261024d565b5b600182019050919050565b6102d78161027c565b82525050565b60006020820190506102f260008301846102ce565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061033d610338610333846102f8565b610318565b6102f8565b9050919050565b600061034f82610322565b9050919050565b600061036182610344565b9050919050565b61037181610356565b82525050565b600060208201905061038c6000830184610368565b9291505056fea264697066735822122076dc1d39e6fc4c5430e3265f240c0deb629dd90162a79f696cd9fa85f5c72d0564736f6c634300081c0033";

type CtfChallenge5ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CtfChallenge5ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CtfChallenge5__factory extends ContractFactory {
  constructor(...args: CtfChallenge5ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _challengeAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_challengeAddress, overrides || {});
  }
  override deploy(
    _challengeAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_challengeAddress, overrides || {}) as Promise<
      CtfChallenge5 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CtfChallenge5__factory {
    return super.connect(runner) as CtfChallenge5__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CtfChallenge5Interface {
    return new Interface(_abi) as CtfChallenge5Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CtfChallenge5 {
    return new Contract(address, _abi, runner) as unknown as CtfChallenge5;
  }
}
