/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CtfChallenge6,
  CtfChallenge6Interface,
} from "../../../contracts/CtfChallenge6.sol/CtfChallenge6";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_challengeAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "challenge",
    outputs: [
      {
        internalType: "contract IChallenge6",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161095638038061095683398181016040528101906100329190610120565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060400160405280601b81526020017f424720435446204368616c6c656e6765203620536f6c7574696f6e0000000000815250600190816100b6919061039d565b505061046f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ed826100c2565b9050919050565b6100fd816100e2565b811461010857600080fd5b50565b60008151905061011a816100f4565b92915050565b600060208284031215610136576101356100bd565b5b60006101448482850161010b565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806101ce57607f821691505b6020821081036101e1576101e0610187565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026102497fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261020c565b610253868361020c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061029a6102956102908461026b565b610275565b61026b565b9050919050565b6000819050919050565b6102b48361027f565b6102c86102c0826102a1565b848454610219565b825550505050565b600090565b6102dd6102d0565b6102e88184846102ab565b505050565b5b8181101561030c576103016000826102d5565b6001810190506102ee565b5050565b601f82111561035157610322816101e7565b61032b846101fc565b8101602085101561033a578190505b61034e610346856101fc565b8301826102ed565b50505b505050565b600082821c905092915050565b600061037460001984600802610356565b1980831691505092915050565b600061038d8383610363565b9150826002028217905092915050565b6103a68261014d565b67ffffffffffffffff8111156103bf576103be610158565b5b6103c982546101b6565b6103d4828285610310565b600060209050601f83116001811461040757600084156103f5578287015190505b6103ff8582610381565b865550610467565b601f198416610415866101e7565b60005b8281101561043d57848901518255600182019150602085019450602081019050610418565b8683101561045a5784890151610456601f891682610363565b8355505b6001600288020188555050505b505050505050565b6104d88061047e6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806306fdde03146100465780632be0956114610064578063d2ef73981461006e575b600080fd5b61004e61008c565b60405161005b91906102f4565b60405180910390f35b61006c61011a565b005b610076610240565b6040516100839190610395565b60405180910390f35b60018054610099906103df565b80601f01602080910402602001604051908101604052809291908181526020018280546100c5906103df565b80156101125780601f106100e757610100808354040283529160200191610112565b820191906000526020600020905b8154815290600101906020018083116100f557829003601f168201915b505050505081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306661abd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ac919061044b565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323df6bd6600883901b6040518263ffffffff1660e01b815260040161020b9190610487565b600060405180830381600087803b15801561022557600080fd5b505af1158015610239573d6000803e3d6000fd5b5050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081519050919050565b600082825260208201905092915050565b60005b8381101561029e578082015181840152602081019050610283565b60008484015250505050565b6000601f19601f8301169050919050565b60006102c682610264565b6102d0818561026f565b93506102e0818560208601610280565b6102e9816102aa565b840191505092915050565b6000602082019050818103600083015261030e81846102bb565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061035b61035661035184610316565b610336565b610316565b9050919050565b600061036d82610340565b9050919050565b600061037f82610362565b9050919050565b61038f81610374565b82525050565b60006020820190506103aa6000830184610386565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806103f757607f821691505b60208210810361040a576104096103b0565b5b50919050565b600080fd5b6000819050919050565b61042881610415565b811461043357600080fd5b50565b6000815190506104458161041f565b92915050565b60006020828403121561046157610460610410565b5b600061046f84828501610436565b91505092915050565b61048181610415565b82525050565b600060208201905061049c6000830184610478565b9291505056fea26469706673582212208818aaa7c5f70c7f703fe2e0924d9053ad8a8888c622e709885ac5a6a8acfb4e64736f6c634300081c0033";

type CtfChallenge6ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CtfChallenge6ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CtfChallenge6__factory extends ContractFactory {
  constructor(...args: CtfChallenge6ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _challengeAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_challengeAddress, overrides || {});
  }
  override deploy(
    _challengeAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_challengeAddress, overrides || {}) as Promise<
      CtfChallenge6 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CtfChallenge6__factory {
    return super.connect(runner) as CtfChallenge6__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CtfChallenge6Interface {
    return new Interface(_abi) as CtfChallenge6Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CtfChallenge6 {
    return new Contract(address, _abi, runner) as unknown as CtfChallenge6;
  }
}
