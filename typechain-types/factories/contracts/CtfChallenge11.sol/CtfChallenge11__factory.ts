/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CtfChallenge11,
  CtfChallenge11Interface,
} from "../../../contracts/CtfChallenge11.sol/CtfChallenge11";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_challengeAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "challenge",
    outputs: [
      {
        internalType: "contract IChallenge11",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintFlag",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516102f03803806102f0833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b6101d9806101176000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063d2ef73981461003b578063e00d023f14610059575b600080fd5b610043610063565b6040516100509190610188565b60405180910390f35b610061610087565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e00d023f6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100ef57600080fd5b505af1158015610103573d6000803e3d6000fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061014e61014961014484610109565b610129565b610109565b9050919050565b600061016082610133565b9050919050565b600061017282610155565b9050919050565b61018281610167565b82525050565b600060208201905061019d6000830184610179565b9291505056fea264697066735822122057777233ff26ab022f0103eeefaad7d625d1bbdcdefe52977ec47f4df019483064736f6c634300081c0033";

type CtfChallenge11ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CtfChallenge11ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CtfChallenge11__factory extends ContractFactory {
  constructor(...args: CtfChallenge11ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _challengeAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_challengeAddress, overrides || {});
  }
  override deploy(
    _challengeAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_challengeAddress, overrides || {}) as Promise<
      CtfChallenge11 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CtfChallenge11__factory {
    return super.connect(runner) as CtfChallenge11__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CtfChallenge11Interface {
    return new Interface(_abi) as CtfChallenge11Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CtfChallenge11 {
    return new Contract(address, _abi, runner) as unknown as CtfChallenge11;
  }
}
