/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CtfChallenge4,
  CtfChallenge4Interface,
} from "../../contracts/CtfChallenge4";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "theHash",
        type: "bytes32",
      },
    ],
    name: "HashCalculated",
    type: "event",
  },
  {
    inputs: [],
    name: "mintFlag",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506102328061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e00d023f14610030575b600080fd5b61003861004e565b6040516100459190610115565b60405180910390f35b6000803360405160200161006291906101ce565b6040516020818303038152906040528051906020012090506000610085826100c6565b90507f3d7cf2e7e9e20d5274ee168f6f51d48502ab06f1d11a284e66b34b7c09e5ad1e816040516100b69190610115565b60405180910390a1809250505090565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b6000819050919050565b61010f816100fc565b82525050565b600060208201905061012a6000830184610106565b92915050565b600082825260208201905092915050565b7f424720435446204368616c6c656e676520340000000000000000000000000000600082015250565b6000610177601283610130565b915061018282610141565b602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101b88261018d565b9050919050565b6101c8816101ad565b82525050565b600060408201905081810360008301526101e78161016a565b90506101f660208301846101bf565b9291505056fea264697066735822122041cf0bd5e6f7eca2dcea05a54f6f1f0fc9a7eda56a09fa7c36cc44432169189164736f6c634300081c0033";

type CtfChallenge4ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CtfChallenge4ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CtfChallenge4__factory extends ContractFactory {
  constructor(...args: CtfChallenge4ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CtfChallenge4 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CtfChallenge4__factory {
    return super.connect(runner) as CtfChallenge4__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CtfChallenge4Interface {
    return new Interface(_abi) as CtfChallenge4Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CtfChallenge4 {
    return new Contract(address, _abi, runner) as unknown as CtfChallenge4;
  }
}
