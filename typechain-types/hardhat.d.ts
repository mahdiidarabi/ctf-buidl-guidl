/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ECDSA__factory>;
    getContractFactory(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCast__factory>;
    getContractFactory(
      name: "Strings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Strings__factory>;
    getContractFactory(
      name: "CtfChallenge11",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CtfChallenge11__factory>;
    getContractFactory(
      name: "CtfChallenge2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CtfChallenge2__factory>;
    getContractFactory(
      name: "ITarget",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITarget__factory>;
    getContractFactory(
      name: "CtfChallenge3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CtfChallenge3__factory>;
    getContractFactory(
      name: "ITarget",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITarget__factory>;
    getContractFactory(
      name: "CtfChallenge4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CtfChallenge4__factory>;
    getContractFactory(
      name: "CtfChallenge5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CtfChallenge5__factory>;
    getContractFactory(
      name: "IChallenge5",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChallenge5__factory>;
    getContractFactory(
      name: "CtfChallenge6",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CtfChallenge6__factory>;
    getContractFactory(
      name: "IChallenge6",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChallenge6__factory>;
    getContractFactory(
      name: "CtfChallenge9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CtfChallenge9__factory>;
    getContractFactory(
      name: "IChallenge6",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChallenge6__factory>;

    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ECDSA",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ECDSA>;
    getContractAt(
      name: "SafeCast",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCast>;
    getContractAt(
      name: "Strings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Strings>;
    getContractAt(
      name: "CtfChallenge11",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CtfChallenge11>;
    getContractAt(
      name: "CtfChallenge2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CtfChallenge2>;
    getContractAt(
      name: "ITarget",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITarget>;
    getContractAt(
      name: "CtfChallenge3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CtfChallenge3>;
    getContractAt(
      name: "ITarget",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITarget>;
    getContractAt(
      name: "CtfChallenge4",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CtfChallenge4>;
    getContractAt(
      name: "CtfChallenge5",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CtfChallenge5>;
    getContractAt(
      name: "IChallenge5",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IChallenge5>;
    getContractAt(
      name: "CtfChallenge6",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CtfChallenge6>;
    getContractAt(
      name: "IChallenge6",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IChallenge6>;
    getContractAt(
      name: "CtfChallenge9",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CtfChallenge9>;
    getContractAt(
      name: "IChallenge6",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IChallenge6>;

    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "Strings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "CtfChallenge11",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CtfChallenge11>;
    deployContract(
      name: "CtfChallenge2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CtfChallenge2>;
    deployContract(
      name: "ITarget",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITarget>;
    deployContract(
      name: "CtfChallenge3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CtfChallenge3>;
    deployContract(
      name: "ITarget",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITarget>;
    deployContract(
      name: "CtfChallenge4",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CtfChallenge4>;
    deployContract(
      name: "CtfChallenge5",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CtfChallenge5>;
    deployContract(
      name: "IChallenge5",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChallenge5>;
    deployContract(
      name: "CtfChallenge6",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CtfChallenge6>;
    deployContract(
      name: "IChallenge6",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChallenge6>;
    deployContract(
      name: "CtfChallenge9",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CtfChallenge9>;
    deployContract(
      name: "IChallenge6",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChallenge6>;

    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "ECDSA",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "SafeCast",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "Strings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "CtfChallenge11",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CtfChallenge11>;
    deployContract(
      name: "CtfChallenge2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CtfChallenge2>;
    deployContract(
      name: "ITarget",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITarget>;
    deployContract(
      name: "CtfChallenge3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CtfChallenge3>;
    deployContract(
      name: "ITarget",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITarget>;
    deployContract(
      name: "CtfChallenge4",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CtfChallenge4>;
    deployContract(
      name: "CtfChallenge5",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CtfChallenge5>;
    deployContract(
      name: "IChallenge5",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChallenge5>;
    deployContract(
      name: "CtfChallenge6",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CtfChallenge6>;
    deployContract(
      name: "IChallenge6",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChallenge6>;
    deployContract(
      name: "CtfChallenge9",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CtfChallenge9>;
    deployContract(
      name: "IChallenge6",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IChallenge6>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
